import heapq
from typing import List, Dict

import numpy as np
import heapq
from typing import List

class FoodRatings:
    def __init__(self, foods: List[str], cuisines: List[str], ratings: List[int]):
        self.food_info = {foods[i]: [cuisines[i], ratings[i]] for i in range(len(foods))}
        self.cuisine_info = {}
        for i in range(len(foods)):
            if cuisines[i] not in self.cuisine_info:
                self.cuisine_info[cuisines[i]] = []
            heapq.heappush(self.cuisine_info[cuisines[i]], (-ratings[i], foods[i]))

    def changeRating(self, food: str, newRating: int) -> None:
        self.food_info[food][1] = newRating
        heapq.heappush(self.cuisine_info[self.food_info[food][0]], (-newRating, food))
            
    def highestRated(self, cuisine: str) -> str:
        while True:
            rating, food = self.cuisine_info[cuisine][0]
            rating = -rating
            if rating == self.food_info[food][1]:
                return food
            heapq.heappop(self.cuisine_info[cuisine])
